[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://4pr8nr046b2b"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uabig"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_alxhm"]
source = 1

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_qyeu6"]
function = 32

[resource]
code = "shader_type canvas_item;
uniform sampler2D screen_tex_frg_3 : hint_screen_texture;



void fragment() {
// Input:2
	vec2 n_out2p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(screen_tex_frg_3, n_out2p0);


// VectorFunc:4
	vec3 n_out4p0 = vec3(1.0) - vec3(n_out3p0.xyz);


// Output:0
	COLOR.rgb = n_out4p0;


}
"
graph_offset = Vector2(-176, 32)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_uabig")
nodes/fragment/2/position = Vector2(-160, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_alxhm")
nodes/fragment/3/position = Vector2(140, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorFunc_qyeu6")
nodes/fragment/4/position = Vector2(386, 157)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 0, 0)
