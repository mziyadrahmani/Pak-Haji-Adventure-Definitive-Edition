[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://jhljgpkdaa74"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/inverseColor.gd" id="1_3u5js"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5jxkn"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_l3s2y"]
source = 1

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_riyql"]
default_input_values = [2, 1.0]
initialized = true
script = ExtResource("1_3u5js")

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_jy02t"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[resource]
code = "shader_type canvas_item;
uniform sampler2D screen_tex_frg_3 : hint_screen_texture;


// InverseColor
vec3 _inverseColorFunc(vec3 _color_to_inverse, float _inverse_color_intensity){
	return mix(_color_to_inverse.rgb, 1.0 - _color_to_inverse.rgb, _inverse_color_intensity);
}

void fragment() {
// Input:2
	vec2 n_out2p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(screen_tex_frg_3, n_out2p0);


// VectorDecompose:5
	float n_out5p0 = n_out3p0.x;
	float n_out5p1 = n_out3p0.y;
	float n_out5p2 = n_out3p0.z;
	float n_out5p3 = n_out3p0.w;


	vec3 n_out4p0;
	float n_out4p1;
// InverseColor:4
	float n_in4p2 = 1.00000;
	{
		n_out4p0 = _inverseColorFunc(vec3(n_out3p0.xyz), n_in4p2);
		n_out4p1 = n_out5p3;
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
graph_offset = Vector2(-201.815, 10.1655)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(760, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_5jxkn")
nodes/fragment/2/position = Vector2(-200, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_l3s2y")
nodes/fragment/3/position = Vector2(120, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeCustom_riyql")
nodes/fragment/4/position = Vector2(520, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDecompose_jy02t")
nodes/fragment/5/position = Vector2(320, 280)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 0, 0, 3, 0, 4, 0, 3, 0, 5, 0, 5, 3, 4, 1)
